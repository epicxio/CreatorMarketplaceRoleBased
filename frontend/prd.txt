We will be developing now only UI here : 
no backend or postgress required. 

Product : ansatz: 
1. Introduction
1.1 Purpose
This PRD outlines the requirements for developing a web-based mathematics education application designed for school students, teachers, parents, and corporate employees. The application will leverage React TSX for the frontend, integrate AI-driven personalization, and feature a futuristic UI/UX that is 5 years ahead of current standards. The goal is to create an engaging, secure, and scalable platform that delivers tailored mathematical content via videos, e-books, and interactive assessments.

1.2 Scope
The application will be a web-based platform with the following core functionalities:

Separate user roles and authentication for school students, teachers, parents, corporate employees, and admins.
Personalized video courses and e-books based on user profiles and learning progress.
Role-based access control, privacy enforcement, and progress tracking.
Futuristic design and seamless user experience.
1.3 Target Audience
School Students: Learners from various grade levels.
School Teachers and Parents: Educators and guardians monitoring student progress.
Corporate Employees: Professionals seeking mathematics education tailored to their departments.
School and Corporate Admins: Administrators managing users and content.
Application Admin: Oversees the entire platform, including admin assignments and content distribution.
2. Objectives
2.1 Business Objectives
Provide a cutting-edge educational tool that enhances mathematics learning for schools and corporates.
Increase user engagement through personalized, AI-driven content and interactive features.
Ensure scalability and maintainability for future expansions (e.g., additional subjects, mobile support).
2.2 User Objectives
Deliver tailor-made learning experiences based on individual skills and roles.
Offer a secure, private, and user-friendly interface with no cross-visibility between users.
Provide tools for tracking progress, scheduling, and recommending courses.
3. Functional Requirements
3.1 User Authentication and Access Control
Separate Sign-Up/Login:
Distinct portals for school students and corporate employees.
Only school and corporate admins can initially sign up for the service.
Admin Privileges:
School admins can add students, teachers, parents, and employees based on grade levels/standards.
Corporate admins can sign up employees based on departments.
Application admin can sign up school/corporate admins via the backend.
Email Notification: All users receive an email with a unique login link.
Role-Based Access Control (RBAC):
Create roles (e.g., student, teacher, parent, employee, admin) and assign specific screen/module access.
School admins can create sub-roles for teachers to manage students.
No visibility between users (e.g., students cannot see other students' progress; employees cannot see other employees' courses).
3.2 Content and Personalization
Tailored Courses:
Post-login, AI generates personalized video courses for each user.
School courses vary by grade level/standard.
Corporate courses vary by department (e.g., finance, engineering).
Content Delivery:
High-quality video player for courses.
E-book integration for supplementary materials.
AI Recommendations:
Based on learning skills and interactive exam results, AI suggests additional content or course adjustments.
Content Management:
Application admin assigns content/courses for schools, students, and corporate employees.
School teachers can prescribe courses to students.
3.3 Progress and Engagement Tracking
Learning Progress: Display individual progress within the application.
Scheduling: Show upcoming calendars, exam schedules, and milestones.
Interactive Assessments: Include quizzes and exams to assess understanding and adapt content.
3.4 Privacy and Security
Ensure data privacy with strict role-based access and encryption.
Comply with educational and corporate data protection standards (e.g., GDPR, FERPA).
Prevent unauthorized access and ensure no cross-user visibility.
4. Non-Functional Requirements
4.1 Performance
The application must handle at least 10,000 concurrent users with minimal latency (under 2 seconds for page loads).
Scalable architecture to support future growth.
4.2 Usability
Intuitive, futuristic UI/UX design, 5 years ahead of current standards.
Responsive design for desktop and tablet devices.
Accessibility compliance (e.g., WCAG 2.1).
4.3 Security
Secure authentication (e.g., OAuth, JWT).
Data encryption for user information and content.
Regular security audits and updates.
4.4 Maintainability
Modular code structure for easy updates and expansions.
Comprehensive documentation and version control.
5. Technical Requirements
5.1 Technology Stack
Frontend: React TSX for a type-safe, scalable UI.
Backend: Node.js with Express (or similar) for API development.
Database: PostgreSQL (or similar relational database) for user data and course management.
Storage: Cloud storage (e.g., AWS S3) for videos and e-books.
AI Integration: Leverage AI tools for personalization, recommendations, and progress tracking.
DevOps: Docker for containerization, CI/CD pipelines for deployment.
5.2 Integration
Email service for user notifications (e.g., SendGrid, Mailgun).
Analytics tools to track user engagement and system performance.
6. User Interface and Design Guidelines
6.1 Design Vision
Futuristic, clean, and minimalist design, at least 5 years ahead of current UI trends.
Interactive elements, smooth animations, and high-contrast visuals for engagement.
Consistent branding with a focus on mathematics (e.g., geometric patterns, educational motifs).
6.2 Key Screens
Login/Sign-Up Pages: Separate portals for students, employees, and admins.
Dashboard: Personalized dashboard showing courses, progress, and schedules.
Course Player: High-quality video player with controls, captions, and e-book links.
Admin Panel: Role management, user addition, and content assignment.
Progress Tracker: Visual representation of learning milestones and upcoming events.
7. Success Criteria
7.1 Launch Metrics
90% user satisfaction rate based on post-launch surveys.
80% adoption rate among target users within the first 3 months.
Zero critical security incidents in the first 6 months.
7.2 Long-Term Goals
Expand to mobile applications and additional subjects.
Achieve 500,000 active users within 2 years.
Continuous improvement based on user feedback and AI-driven insights.

